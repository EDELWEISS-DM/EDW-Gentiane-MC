#!/usr/bin/env bash
# -*- mode: shell-script; -*-
#
# Utility script used to locate resources and files installed within
# the EDW-Gentiane-MC library.
# This implementation does not support a relocatable binary distribution
# of EDW-Gentiane-MC.
#
# Copyright 2017 Fran√ßois Mauger <mauger@lpccaen.in2p3.fr>
#
# This file is part of EDW-Gentiane-MC.
#
# EDW-Gentiane-MC is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# EDW-Gentiane-MC is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EDW-Gentiane-MC.  If not, see <http://www.gnu.org/licenses/>.

# Description: an utility  script to fetch informations about the
# current EDW-Gentiane-MC installation. This should be very useful when used
# from some client scripts (i.e. wrapper/launcher scripts for a
# batch system on a computing farm).
# Note: this is a not relocatable version.

PKGNAME="EDW-Gentiane-MC"
APPNAME="edw-gentiane-mc-query"

prefix_dir="@CMAKE_INSTALL_PREFIX@"
version_str="@EDWGentianeMC_VERSION@"
#lib_dir="${prefix_dir}/@CMAKE_INSTALL_LIBDIR@"
bin_dir="${prefix_dir}/@CMAKE_INSTALL_BINDIR@"
#inc_dir="${prefix_dir}/@CMAKE_INSTALL_INCLUDEDIR@"
data_dir="${prefix_dir}/@CMAKE_INSTALL_DATADIR@/EDWGentianeMC-@EDWGentianeMC_VERSION@"
doc_dir="${data_dir}/Documentation"
resource_dir="${data_dir}/resources"
cmake_dir="${prefix_dir}/@CMAKE_INSTALL_CMAKEDIR@/@EDWGentianeMC_PLUGINLIBDIR@"

function print_usage()
{

cat<<EOF

${APPNAME} - Utility script to fetch informations about ${PKGNAME} installation.

Options:
  -h [ --help ]          Print help.

  --version              Print version.

  --prefix               Print installation prefix directory.

  --bindir               Print binary directory.

  --datadir              Print data base directory.

  --docdir               Print documentation base directory.

  --resourcedir          Print resource base directory.

EOF

    return
}

# --plugins              Print the list of shipped plugins/modules.
# --libdir               Print library directory.
# --incdir               Print include base directory.

while [ -n "$?" ]; do
      token="$1"
      if [ "${token:0:1}" = "-" ]; then
	  option="${token}"
	  if [ "${option}" = "--help" -o "${option}" = "-h" ]; then
	      print_usage
	      exit 0
	  elif [ "${option}" = "--version" ]; then
	      echo ${version_str}
	      exit 0
	  elif [ "${option}" = "--prefix" ]; then
	      echo ${prefix_dir}
	      exit 0
	  # elif [ "${option}" = "--libdir" ]; then
	  #     echo ${lib_dir}
	  #     exit 0
	  elif [ "${option}" = "--bindir" ]; then
	      echo ${bin_dir}
	      exit 0
	  # elif [ "${option}" = "--incdir" ]; then
	  #     echo ${inc_dir}
	  #     exit 0
	  elif [ "${option}" = "--datadir" ]; then
	      echo ${data_dir}
	      exit 0
	  elif [ "${option}" = "--docdir" ]; then
	      echo ${doc_dir}
	      exit 0
	  # elif [ "${option}" = "--plugindir" ]; then
	  #     echo ${plugin_dir}
	  #     exit 0
	  elif [ "${option}" = "--resourcedir" ]; then
	      echo ${resource_dir}
	      exit 0
	  # elif [ "${option}" = "--plugins" ]; then
	  #     for plugin in ${plugins} ; do
	  # 	  echo ${plugin}
	  #     done
	  #     exit 0
	  else
	      echo >&2 "[error] ${APPNAME}: Invalid option '${option}' !"
	      print_usage
	      exit 1
	  fi
      else
	  echo >&2 "[error] ${APPNAME}: Invalid argument '${token}' !"
	  print_usage
	  exit 1
      fi
      shift 1
done

exit 0
